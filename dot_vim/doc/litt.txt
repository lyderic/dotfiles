*Litt*                    LITT USER MANUAL

A 'litt' file is a file with extension 'lkl'.

====================================================================

CONTENTS 

  1. Introduction                                 |LittIntroduction|
  2. Shortcuts                                    |LittShortcuts|
	3. Comments                                     |LittComments|
  4. The Revision System                          |Revision|
  5. Files                                        |LittFiles|
  6. Floc                                         |Floc|

====================================================================

INTRODUCTION                                       *LittIntroduction*

lkl files are basically markdown files with additions, notably:

 1. The keymap is set to 'lkaccents' (allows [e -> é etc.)
 2. Spelling is activated in French
 3. File is sanitized each time it is saved (non breaking spaces
    added etc.)
 4. Some abbreviations are set (e.g. ete -> été)
 5. Comments are allowed |LittComments|
 6. The |Revision| system is loaded
 7. The |Floc| system is loaded
 8. The basic markdown syntax file is loaded, with addition of
    syntax for litt comments and litt revisions.
 9. Command JournalTime is added 

====================================================================

SHORTCUTS                                             *LittShortcuts*

At any time, you can list the litt related shorcuts : make sure you  
are in a .lkl buffer and hit: <leader>h

Litt shortcuts:

	<leader>o : toggle Goyo'
	<leader>f : fix typo
	<leader>a : add to dictionnary
	<leader>r : launch Quickfix revision
	<leader>d : delete revision

Notes

  * In insert mode : [[[ create a new revision',
  * Please also see: |FlocCommands|

====================================================================

COMMENTS                                               *LittComments*

In markdown, there is no comments. This has been added to litt.

Comments are lines starting with `//`. Comments have to be at the
beginning of the line. Comments inside a line are ignored and
treated as normal text.

This pandoc lua filter needs to be run when processing the conversion
in order for these lines to be ignored:
>
    function Para(e)
    	if string.sub(pstring(e),1,2) == "//" then
    		return {}
    	end
    end
<
====================================================================

THE REVISION SYSTEM                                        *Revision*

A revision is any bold text between square brackets. That is to 
say, as we use markdown, notes surrounded by `[==` and `==]`.

To search revisions and open them in a Quickfix window, use the :
Revision() function (shortcut: <leader>r).

To insert a revision while in insert more, hit '[' three time ([[[).

To delete a revision, make sure the cursor in anywhere within the 
opening and closing tags (i.e. between `[==` and `==]` and hit 
<leader>d.

Revisions are highlighted as errors to be clearly visible. A final 
version of a text should never contain revisions.

====================================================================

FILES                                                     *LittFiles*

.vim
├── doc
│   ├── litt.txt [this help]
│   └── tags
├── ftdetect
│   └── litt.vim [set up a "litt" file type]
├── ftplugin
│   └── litt
│       ├── abbreviations.vim [useful iabbr to write French]
│       ├── floc.vim [the "floc" system]
│       ├── help.vim [what is displayed with <leader>h]
│       ├── main.vim [various setups]
│       └── revision.vim [the "revision" system]
├── keymap
│   └── lkaccents.vim [French accents: [e -> é etc.]
├── plugin
│   ├── goyo.vim [distraction-free writing]
│   ├── templates.vim [tex and floc templates (personnages etc.)]
│   └── sanitize.vim [sanitizer e.g. 0x00A0 before ?!;: etc.]
├── spell
│   ├── fr.utf-8.spl
│   └── fr.utf-8.sug
└── syntax
    └── litt.vim [basically a copy of markdown syntax]

 vim:ft=help:tw=68:ts=2:noet:norl
