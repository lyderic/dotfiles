export BIGBANG_VERSION="202504100824"

# If this script is not sourced, it does nothing
(return 0 2>/dev/null) || kill -INT $$

# Useful aliases
alias z='tmux attach'
alias l=ls
alias ll="ls -lh"
alias la="ls -la"
alias cls="clear"
alias L=less
alias p=pwd
alias stamp='date +"%Y%m%d%M%H%S"'
alias croc='croc --relay europe.cybermoped.com'
alias machinectl='sudo machinectl'

# PATH management
# this function is to avoid duplicates
topath() {
	# if no path type specified, then default is 'PATH'
	local ptype=PATH # path type (PATH, INFOPATH or MANPATH)
	local var=
	[ -z $2 ] && var=$1 || { ptype=$1 ; var=$2 ; }
  case ":${!ptype}:" in
    *":${var}:"*) :;; # already there
    *) export "${ptype}=${var}:${!ptype}";;
  esac
}
showpath() {
	for p in PATH CDPATH MANPATH INFOPATH; do
		echo "${p}:"
		echo ${!p} | tr ':' '\n' | sort
	done
}

# PATH
[ -d ${HOME}/bin ] && topath ${HOME}/bin
[ -d ${HOME}/scripts ] && topath ${HOME}/scripts

# MANPATH
[ -d "${HOME}/.local/share/man" ] && \
	topath MANPATH ${HOME}/.local/share/man

# GOBIN to $HOME/bin if go is installed
[ -d ${HOME}/go ] && export GOBIN=${HOME}/bin

## just completion and aliases
which just > /dev/null && {
	alias k=just
	source <(just --completions bash)
	complete -F _just -o bashdefault -o default k
	alias kk='just --justfile ~/justfile'
	complete -W "$(just --global-justfile --summary)" kk
}

## fzf completion (arch)
[ -e /usr/share/fzf/completion.bash ] && \
	source /usr/share/fzf/completion.bash
## fzf completion (ubuntu)
[ -e /usr/local/share/bash-completion/completions/fzf-completion.bash ] && \
	source /usr/local/share/bash-completion/completions/fzf-completion.bash 

# chezmoi management
alias cz="chezmoi"
[ -e /usr/share/bash-completion/completions/chezmoi ] && {
	. /usr/share/bash-completion/completions/chezmoi 
}
complete -o default -o nospace -F __start_chezmoi cz

# sudo aliases and their completions
sudoc() {
	prog=${1:-cryptsetup}
	which ${prog} > /dev/null 2>&1 || return
	alias ${prog:0:3}="sudo -E ${prog}"
	. "/usr/share/bash-completion/completions/${prog}"
	complete -F _${prog} ${prog:0:3}
}
# systemctl and btrfs can be safely aliased 
# however, cryptsetup causes bash -c '. ~/.bigbang' to fail
sudoc systemctl
sudoc btrfs

# Useful exports
export LESS="FRIX"
export EDITOR=vim
export GIT_PAGER="less -erX"
export TERM=xterm-256color

## ANSI colors
## BASIC
#export RED="\e[0;31m" GRN="\e[0;32m" YEL="\e[0;33m"
#export BLU="\e[0;34m" MAG="\e[0;35m" CYA="\e[0;36m"
## BRIGHT
#export BRED="\e[0;91m" BGRN="\e[0;92m" BYEL="\e[0;93m"
#export BBLU="\e[0;94m" BMAG="\e[0;95m" BCYA="\e[0;96m"
## BOLD (GRAS)
#export GRED="\e[1;31m" GGRN="\e[1;32m" GYEL="\e[1;33m"
#export GBLU="\e[1;34m" GMAG="\e[1;35m" GCYA="\e[1;36m"
## BRIGHT AND BOLD
#export BGRED="\e[1;91m" BGGRN="\e[1;92m" BGYEL="\e[1;93m"
#export BGBLU="\e[1;94m" BGMAG="\e[1;95m" BGCYA="\e[1;96m"
## BACKGROUNDS
#export BKRED="\e[41m" BKGRN="\e[42m" BKYEL="\e[43m"
#export BKBLU="\e[44m" BKMAG="\e[45m" BKCYA="\e[46m"
## SPECIAL
#export BOL="\e[1m" DIM="\e[2m" ITA="\e[3m"
#export UND="\e[4m" REV="\e[7m" NOC="\e[0m"

# Control functions
header() { echo -e "\e[93;1;44m\e[K${@}\e[m" ; }
ok()     { echo -e "\e[92m${@}\e[m" ; }
blue()   { echo -e "\e[34m${@}\e[m"  ; }
cyan()   { echo -e "\e[36m${@}\e[m"  ; }
warn()   { echo -e "\e[93m${@}\e[m" ; }
fail()   { echo -e "\e[91m${@}\e[m" ; }
bold()   { echo -e "\e[1m${@}\e[m"  ; }
die()    { fail ${@} ; exit 42 ; }
export -f header ok blue cyan warn fail bold die

# rename a file or directory with vim-like behaviour
en() {
	oldname="${@}"
	read -p "> " -ei "${oldname}" "newname"
	mv -iv "${oldname}" "${newname}"
}

# Prompt
PS1='[\u@\h \W]\$ '
PROMPT_DIRTRIM=2

alias bigbang='. ${HOME}/.bigbang ; blue "bigbang v${BIGBANG_VERSION}"'

# Mandatory for gpg-agent
export GPG_TTY=$(tty)

# Wipe history when we close shell
finish() {
  history -c
  > $HOME/.bash_history
	clear
}
trap finish EXIT

# Always get correct title in Gnome Terminal's tabs
PROMPT_COMMAND='echo -ne "\033]0;${HOSTNAME%%.*}\007"'

# Lua libs
command -v lua >/dev/null && {
	export LUA_PATH="$(lua -e 'print(package.path)');\
	${HOME}/.local/share/lua/?.lua"
}

# Special for workstations
[ -e ~/.workstation ] && {
	PS1='\h:\w\$ '
	source ~/.workstation
}

# If additional setup is required
[ -e ~/.aqui ] && source ~/.aqui

# show when in chezmoi subshell
[ -z ${CHEZMOI_SUBSHELL} ] || {
	PS1="\e[3;36m[SUBSHELL]\e[0;93m ---[ $(basename ${CHEZMOI_CONFIG_FILE/.yaml}) ]---\e[m\n${PS1}"
}

# direnv integration
[ -x /usr/bin/direnv ] && eval "$(direnv hook bash)"
export DIRENV_LOG_FORMAT=$'\033[2;36m: %s\033[0m'

# vim: filetype=bash
